import subprocess
import time

def get_available_wifi():
    """L·∫•y danh s√°ch WiFi kh·∫£ d·ª•ng"""
    output = subprocess.check_output("nmcli -t -f SSID dev wifi list", shell=True).decode()
    available_networks = output.strip().split("\n")
    return [ssid for ssid in available_networks if ssid]

def get_saved_wifi():
    """L·∫•y danh s√°ch WiFi ƒë√£ t·ª´ng k·∫øt n·ªëi"""
    output = subprocess.check_output("nmcli -t -f NAME connection show", shell=True).decode()
    saved_networks = output.strip().split("\n")
    return [ssid for ssid in saved_networks if ssid]

def connect_to_wifi(ssid):
    """K·∫øt n·ªëi t·ªõi WiFi"""
    print(f"üîÑ ƒêang k·∫øt n·ªëi {ssid} ...")
    result = subprocess.run(["nmcli", "connection", "up", ssid], capture_output=True, text=True)
    if result.returncode == 0:
        print(f"ƒê√£ k·∫øt n·ªëi th√†nh c√¥ng {ssid}!")
    else:
        print(f"Kh√¥ng th·ªÉ k·∫øt n·ªëi {ssid}. L·ªói:\n{result.stderr}")

def check_and_reconnect():
    """Ki·ªÉm tra v√† k·∫øt n·ªëi l·∫°i WiFi n·∫øu m·∫•t k·∫øt n·ªëi"""
    while True:
        try:
            result = subprocess.run(["ping", "-c", "2", "8.8.8.8"], capture_output=True, text=True)
            
            if result.returncode == 0:
                print(" Internet v·∫´n ho·∫°t ƒë·ªông, kh√¥ng c·∫ßn k·∫øt n·ªëi l·∫°i.")
            else:
                print("‚ö†Ô∏è M·∫•t k·∫øt n·ªëi! ƒêang t√¨m m·∫°ng WiFi kh·∫£ d·ª•ng...")

                available_wifi = get_available_wifi()
                saved_wifi = get_saved_wifi()
                
                # T√¨m m·∫°ng WiFi ƒë√£ l∆∞u trong danh s√°ch kh·∫£ d·ª•ng
                for wifi in saved_wifi:
                    if wifi in available_wifi:
                        connect_to_wifi(wifi)
                        break
                else:
                    print("Kh√¥ng t√¨m th·∫•y m·∫°ng WiFi n√†o ƒë√£ l∆∞u.")
            
            time.sleep(30)

        except KeyboardInterrupt:
            print(" D·ª´ng ch∆∞∆°ng tr√¨nh.")
            break

check_and_reconnect()
